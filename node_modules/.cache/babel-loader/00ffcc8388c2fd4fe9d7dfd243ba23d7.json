{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useInterceptor = exports.interceptRoute = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar incrementalId = 1;\nvar interceptors = [];\n\nvar interceptRoute = function interceptRoute(previousRoute, nextRoute) {\n  if (!interceptors.length) {\n    return nextRoute;\n  }\n\n  return interceptors.reduceRight(function (nextRoute, interceptor) {\n    return nextRoute === previousRoute ? nextRoute : interceptor.handlerFunction(previousRoute, nextRoute);\n  }, nextRoute);\n};\n\nexports.interceptRoute = interceptRoute;\n\nvar get = function get(componentId) {\n  return interceptors.find(function (obj) {\n    return obj.componentId === componentId;\n  }) || null;\n};\n\nvar remove = function remove(componentId) {\n  var index = interceptors.findIndex(function (obj) {\n    return obj.componentId === componentId;\n  });\n\n  if (index !== -1) {\n    interceptors.splice(index, 1);\n  }\n};\n\nvar useInterceptor = function useInterceptor(handlerFunction) {\n  var _React$useState = _react.default.useState(incrementalId++),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      componentId = _React$useState2[0];\n\n  var obj = get(componentId);\n\n  if (!obj) {\n    obj = {\n      componentId: componentId,\n      stop: function stop() {\n        return remove(componentId);\n      },\n      handlerFunction: handlerFunction\n    };\n    interceptors.unshift(obj);\n  }\n\n  _react.default.useEffect(function () {\n    return function () {\n      return obj.stop();\n    };\n  }, []);\n\n  return obj.stop;\n};\n\nexports.useInterceptor = useInterceptor;","map":{"version":3,"sources":["../src/interceptor.js"],"names":["incrementalId","interceptors","interceptRoute","nextRoute","interceptor","get","obj","remove","index","useInterceptor","componentId","React","stop","handlerFunction"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,aAAa,GAAjB,CAAA;AAEA,IAAMC,YAAY,GAAlB,EAAA;;AAEO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,aAAA,EAAA,SAAA,EAA8B;AAC3D,MAAI,CAACD,YAAY,CAAjB,MAAA,EAA0B;AACzB,WAAA,SAAA;AACA;;AAED,SAAO,YAAY,CAAZ,WAAA,CACN,UAAA,SAAA,EAAA,WAAA,EAAA;AAAA,WAA4BE,SAAS,KAATA,aAAAA,GAAAA,SAAAA,GAEzBC,WAAW,CAAXA,eAAAA,CAAAA,aAAAA,EAFH,SAEGA,CAFH;AADM,GAAA,EAAP,SAAO,CAAP;AALM,CAAA;;;;AAaP,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAA,WAAA,EAAA;AAAA,SAAiB,YAAY,CAAZ,IAAA,CAAkB,UAAA,GAAA,EAAG;AAAA,WAAIC,GAAG,CAAHA,WAAAA,KAAJ,WAAA;AAArB,GAAA,KAAjB,IAAA;AAAZ,CAAA;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAA,WAAA,EAAiB;AAC/B,MAAMC,KAAK,GAAG,YAAY,CAAZ,SAAA,CAAuB,UAAA,GAAA,EAAG;AAAA,WAAIF,GAAG,CAAHA,WAAAA,KAAJ,WAAA;AAAxC,GAAc,CAAd;;AACA,MAAIE,KAAK,KAAK,CAAd,CAAA,EAAkB;AACjBP,IAAAA,YAAY,CAAZA,MAAAA,CAAAA,KAAAA,EAAAA,CAAAA;AACA;AAJF,CAAA;;AAOO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAA,eAAA,EAAqB;AAAA,MAAA,eAAA,GAC5BE,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAeX,aADa,EAC5BW,CAD4B;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAC3CD,WAD2C,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAGlD,MAAIJ,GAAG,GAAGD,GAAG,CAAb,WAAa,CAAb;;AAEA,MAAI,CAAJ,GAAA,EAAU;AACTC,IAAAA,GAAG,GAAG;AACLI,MAAAA,WAAW,EADN,WAAA;AAELE,MAAAA,IAAI,EAAE,SAAA,IAAA,GAAA;AAAA,eAAML,MAAM,CAAZ,WAAY,CAAZ;AAFD,OAAA;AAGLM,MAAAA,eAAe,EAAfA;AAHK,KAANP;AAMAL,IAAAA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA;AACA;;AAEDU,EAAAA,MAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAgB,YAAA;AAAA,WAAM,YAAA;AAAA,aAAML,GAAG,CAAT,IAAMA,EAAN;AAAN,KAAA;AAAhBK,GAAAA,EAAAA,EAAAA;;AAEA,SAAOL,GAAG,CAAV,IAAA;AAjBM,CAAA","sourcesContent":["import React from 'react';\r\n\r\nlet incrementalId = 1;\r\n\r\nconst interceptors = [];\r\n\r\nexport const interceptRoute = (previousRoute, nextRoute) => {\r\n\tif (!interceptors.length) {\r\n\t\treturn nextRoute;\r\n\t}\r\n\r\n\treturn interceptors.reduceRight(\r\n\t\t(nextRoute, interceptor) => nextRoute === previousRoute\r\n\t\t\t? nextRoute\r\n\t\t\t: interceptor.handlerFunction(previousRoute, nextRoute),\r\n\t\tnextRoute\r\n\t);\r\n};\r\n\r\nconst get = (componentId) => interceptors.find(obj => obj.componentId === componentId) || null;\r\nconst remove = (componentId) => {\r\n\tconst index = interceptors.findIndex(obj => obj.componentId === componentId);\r\n\tif (index !== -1) {\r\n\t\tinterceptors.splice(index, 1);\r\n\t}\r\n};\r\n\r\nexport const useInterceptor = (handlerFunction) => {\r\n\tconst [componentId] = React.useState(incrementalId++);\r\n\r\n\tlet obj = get(componentId);\r\n\r\n\tif (!obj) {\r\n\t\tobj = {\r\n\t\t\tcomponentId,\r\n\t\t\tstop: () => remove(componentId),\r\n\t\t\thandlerFunction\r\n\t\t};\r\n\r\n\t\tinterceptors.unshift(obj);\r\n\t}\r\n\r\n\tReact.useEffect(() => () => obj.stop(), []);\r\n\r\n\treturn obj.stop;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}