{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.A = exports.setLinkProps = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"./router\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\r\n * Accepts HTML `a`-tag properties, requiring `href` and optionally\r\n * `onClick`, which are appropriately wrapped to allow other\r\n * frameworks to be used for creating `hookrouter` navigatable links.\r\n *\r\n * If `onClick` is supplied, then the navigation will happen before\r\n * the supplied `onClick` action!\r\n *\r\n * @example\r\n *\r\n * &lt;MyFrameworkLink what=\"ever\" {...useLink({ href: '/' })}&gt;\r\n *   Link text\r\n * &lt;/MyFrameworkLink&gt;\r\n *\r\n * @param {Object} props Requires `href`. `onClick` is optional.\r\n */\n\n\nvar setLinkProps = function setLinkProps(props) {\n  var onClick = function onClick(e) {\n    if (!e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && props.target !== \"_blank\") {\n      e.preventDefault(); // prevent the link from actually navigating\n\n      (0, _router.navigate)(e.currentTarget.href);\n    }\n\n    if (props.onClick) {\n      props.onClick(e);\n    }\n  };\n\n  var href = props.href.substr(0, 1) === '/' ? (0, _router.getBasepath)() + props.href : props.href;\n  return _objectSpread({}, props, {\n    href: href,\n    onClick: onClick\n  });\n};\n/**\r\n * Accepts standard HTML `a`-tag properties. `href` and, optionally,\r\n * `onClick` are used to create links that work with `hookrouter`.\r\n *\r\n * @example\r\n *\r\n * &lt;A href=\"/\" target=\"_blank\"&gt;\r\n *   Home\r\n * &lt;/A&gt;\r\n *\r\n * @param {Object} props Requires `href`. `onClick` is optional\r\n */\n\n\nexports.setLinkProps = setLinkProps;\n\nvar A = function A(props) {\n  return _react.default.createElement(\"a\", setLinkProps(props));\n};\n\nexports.A = A;","map":{"version":3,"sources":["../src/Link.js"],"names":["setLinkProps","onClick","e","props","href","A"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;AAgBO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAW;AACtC,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAA,CAAA,EAAO;AACtB,QAAI,CAACC,CAAC,CAAF,QAAA,IAAe,CAACA,CAAC,CAAjB,OAAA,IAA6B,CAACA,CAAC,CAA/B,MAAA,IAA0C,CAACA,CAAC,CAA5C,OAAA,IAAwDC,KAAK,CAALA,MAAAA,KAA5D,QAAA,EAAuF;AACtFD,MAAAA,CAAC,CADqF,cACtFA,GADsF,CAClE;;AACpB,OAAA,GAAA,OAAA,CAAA,QAAA,EAASA,CAAC,CAADA,aAAAA,CAAT,IAAA;AACA;;AAED,QAAIC,KAAK,CAAT,OAAA,EAAmB;AAClBA,MAAAA,KAAK,CAALA,OAAAA,CAAAA,CAAAA;AACA;AARF,GAAA;;AAUA,MAAMC,IAAI,GACTD,KAAK,CAALA,IAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAAAA,GAAAA,GACG,CAAA,GAAA,OAAA,CAAA,WAAA,MAAgBA,KAAK,CADxBA,IAAAA,GAEGA,KAAK,CAHT,IAAA;AAKA,SAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAkBC,IAAAA,IAAI,EAAtB,IAAA;AAAwBH,IAAAA,OAAO,EAAPA;AAAxB,GAAA,CAAA;AAhBM,CAAA;AAmBP;;;;;;;;;;;;;;;;AAYO,IAAMI,CAAC,GAAG,SAAJA,CAAI,CAAA,KAAA,EAAA;AAAA,SAAW,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,GAAA,EAAOL,YAAY,CAA9B,KAA8B,CAAnB,CAAX;AAAV,CAAA","sourcesContent":["import React from \"react\";\r\nimport {navigate, getBasepath} from \"./router\";\r\n\r\n/**\r\n * Accepts HTML `a`-tag properties, requiring `href` and optionally\r\n * `onClick`, which are appropriately wrapped to allow other\r\n * frameworks to be used for creating `hookrouter` navigatable links.\r\n *\r\n * If `onClick` is supplied, then the navigation will happen before\r\n * the supplied `onClick` action!\r\n *\r\n * @example\r\n *\r\n * &lt;MyFrameworkLink what=\"ever\" {...useLink({ href: '/' })}&gt;\r\n *   Link text\r\n * &lt;/MyFrameworkLink&gt;\r\n *\r\n * @param {Object} props Requires `href`. `onClick` is optional.\r\n */\r\nexport const setLinkProps = (props) => {\r\n\tconst onClick = (e) => {\r\n\t\tif (!e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && props.target !== \"_blank\") {\r\n\t\t\te.preventDefault(); // prevent the link from actually navigating\r\n\t\t\tnavigate(e.currentTarget.href);\r\n\t\t}\r\n\r\n\t\tif (props.onClick) {\r\n\t\t\tprops.onClick(e);\r\n\t\t}\r\n\t};\r\n\tconst href =\r\n\t\tprops.href.substr(0, 1) === '/'\r\n\t\t\t? getBasepath() + props.href\r\n\t\t\t: props.href;\r\n\r\n\treturn {...props, href, onClick};\r\n};\r\n\r\n/**\r\n * Accepts standard HTML `a`-tag properties. `href` and, optionally,\r\n * `onClick` are used to create links that work with `hookrouter`.\r\n *\r\n * @example\r\n *\r\n * &lt;A href=\"/\" target=\"_blank\"&gt;\r\n *   Home\r\n * &lt;/A&gt;\r\n *\r\n * @param {Object} props Requires `href`. `onClick` is optional\r\n */\r\nexport const A = (props) => <a {...setLinkProps(props)} />;\r\n"]},"metadata":{},"sourceType":"script"}